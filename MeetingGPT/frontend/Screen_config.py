import streamlit as st
import logging
import os

# Configura√ß√£o do logger
logging.basicConfig(
    filename='screen_config.log',
    level=logging.INFO,
    format='%(asctime)s - %(levelname)s - %(message)s'
)

class ConfigScreen:
    def __init__(self):
        """
        Inicializa a tela de configura√ß√£o para definir a chave da OpenAI.
        """
        self.api_key = None  # Inicializa a vari√°vel

    def render(self):
        """
        Renderiza a interface da tela de configura√ß√£o usando Streamlit.
        """
        try:
            st.title("Configura√ß√£o da Chave OpenAI")
            st.write("Forne√ßa a chave da OpenAI para habilitar as funcionalidades de transcri√ß√£o e insights.")

            # Verifica se a chave j√° est√° armazenada na sess√£o
            if "openai_api_key" not in st.session_state:
                st.session_state["openai_api_key"] = ""

            # Campo para entrada da chave da API
            self.api_key = st.text_input(
                "Chave da OpenAI:", 
                value=st.session_state["openai_api_key"], 
                placeholder="Insira sua chave aqui", 
                type="password"
            )

            # Bot√£o para salvar a chave
            if st.button("Salvar Chave"):
                if self.api_key:
                    st.session_state["openai_api_key"] = self.api_key  # Salva no session_state
                    os.environ["OPENAI_API_KEY"] = self.api_key  # Define no ambiente do sistema (opcional)
                    st.success("‚úÖ Chave da OpenAI salva com sucesso para esta sess√£o.")
                    logging.info("‚úÖ Chave da OpenAI configurada com sucesso.")

                    # Debug para verificar se est√° salvando corretamente
                    st.write(f"üîë Chave armazenada: {st.session_state['openai_api_key'][:10]}... (ocultado para seguran√ßa)")
                else:
                    st.error("‚ùå A chave da OpenAI n√£o pode estar vazia.")
                    logging.warning("‚ö†Ô∏è Tentativa de salvar uma chave vazia.")

            st.write("üîπ Nota: A chave ser√° usada apenas durante esta sess√£o e n√£o ser√° salva permanentemente.")

        except Exception as e:
            logging.error(f"‚ùå Erro ao renderizar a tela de configura√ß√£o: {e}")
            st.error("Ocorreu um erro ao carregar a tela de configura√ß√£o.")

# Exemplo de uso
if __name__ == "__main__":
    config_screen = ConfigScreen()
    config_screen.render()
